<% provide :page_title, @user.name_or_email  %>

<%# В шаблоне show мы пишем html-код для вывода внутреннего содержимого %>
<%# страницы пользователя, которая будет показана по адресу /users/1 %>

<%# Блок с информацией о пользователей %>
  <div class="user-header text-center" style="background: <%= @user.bg_color %>">

    <h1 class="title-medium">
        <%# Выводим имя пользователя %>
        <%= @user.name_or_email %>
    </h1>

    <div class="buffer-both">
      <%= link_to t('global.button.edit'), edit_user_path(@user) if current_user == @user  %>
    </div>

    <% if current_user == @user  %>
      <div class="buffer-both">
        <%= button_to "generate api_token", { action: "show", id: @user.id },
                class: 'button button-small button-dark', name: 'pressing',
                method: :get, data: { confirm: t('global.dialog.you_sure') },
                remote: true %>
      </div>
    <% end %>

    <div class="user-image-div">
       <% unless @user.email == Dotenv.load('.env')['TEST_EMAIL'] %>
          <%= @user.gravatar %>
       <% else %>
          <%= image_tag 'Elizabeth.jpg', height: '115', width: '100',
                    class: 'menu_icon', alt: '[Foto]' %>
       <% end %>
    </div>

    <div class="user-details">

      <% unless current_user == @user  %>
        <div class="user-ask-button container text-center">
          <%= link_to t('global.button.ask'), user_path(@user), class: 'button button-light',
                      id: 'ask-button', data: {'bs-toggle': 'collapse'}  %>
        </div>
      <% end %>

      <div class="user-statistics container text-center">

        <div class="column-1-3">
          <%= inclination(@questions_count,
               t('.form.question'), t('.form.of_question'), t('.form.questions')) %>
        </div>

        <div class="column-1-3">
          <%= inclination(@answers_count,
             t('.form.answer'), t('.form.of_answer'), t('.form.answers')) %>
        </div>

        <div class="column-1-3">
        <% if I18n.locale.to_s == 'en' %>
          <%= inclination(@unanswered_count,
              "unanswered question", "unanswered questions", "unanswered questions") %>
        <% else %>
          <%= inclination(@unanswered_count,
              "вопрос", "вопроса", "вопросов") %>
              без ответа
        <% end %>
        </div>

      </div>
    </div>
</div>

<%# для нового вопроса question нет, поэтому передаем название политики %>
<% if policy(:question).new? %>
  <%# Блок с формой для задавания пользователю вопроса %>
  <%# Автор профиля не может создавать вопросы на своей странице %>
  <% unless current_user == @user %>
    <div class="user-question-form-div column-1-4 column-1-4-right" id='ask-form'>
      <div class="user-question-form buffer-both">
        <div class="form-field">
          <%# Мы используем хелпер form_for, принимающий на вход блок erb-кода, %>
          <%# в котором доступна переменная f, содержащая так называемый form %>
          <%# builder, с помощью которого можно делать поля формы для нового %>
          <%# вопроса. %>
            <%= form_for @new_question do |f| %>
            <%# С помощью объекта для создания полей формы, связанной с моделью %>
            <%# @new_question Мы создаем инпуты с нужными полями для формы, %>
            <%# значения будут подставлены rails автоматически. %>
              <%= f.hidden_field :user_id %>
              <div class="form-field">
                  <%= f.label t('.form.your_question', username: @user.username), class: 'form-label' %>
                  <%= f.text_area :text, class: 'form-textarea' %>
              </div>

              <%= recaptcha_tags size: 'compact' unless current_user.present?%>

              <div class="form-action">
                  <%= submit_tag t('.form.ask_question'), class: 'button button-small button-dark' %>
              </div>
            <% end %>
        </div>
      </div>
    </div>
  <% end %>
<% end %>

<%# Блок со списком вопросов к пользователю %>
<div class="column-3-4">
  <div class="user-questions buffer-both">
    <div class="questions-list">
      <%# Обратите внимание, как мы делаем цикл по всем вопросам, точно %>
      <%# также, как мы делали циклы в ruby %>

        <%# данная навигация показывается в том случае, если количество страниц больше 1 %>
        <%= pagination @pagy %>

        <% @questions.includes([:question_hashtags, :hashtags]).each do |question| %>
             <%# Мы рисуем здесь для кажого вопроса в списке вопросов фрагмент %>
             <%# (паршал), передавая в него текущий вопрос. Это очень похоже на %>
             <%# вызов метода в ruby %>
             <%= render partial: 'questions/question', object: question %>
        <% end %>

      <%= pagination @pagy %>
    </div>
  </div>
